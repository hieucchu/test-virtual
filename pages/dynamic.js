import Head from 'next/head';
import { useCallback, useRef, useState } from 'react';
import InfiniteScroll from 'react-infinite-scroll-component';
import { useVirtual } from 'react-virtual';

const Dynamic = () => {
  const [data, setData] = useState(() => new Array(10).fill());

  const fetchMoreData = () => {
    setTimeout(() => {
      setData((curData) => [...curData, ...new Array(50).fill()]);
    }, 250);
  };

  const hasMore = data.length < 10000;

  const parentRef = useRef();

  const rowVirtualizer = useVirtual({
    size: hasMore ? data.length + 1 : data.length,
    parentRef,
    estimateSize: useCallback(() => 70, []),
    overscan: 5
  });

  return (
    <div>
      <Head>
        <title>Dynamic</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>Dynamic</h1>
        <div
          ref={parentRef}
          className="List"
          style={{
            height: `200px`,
            width: `400px`,
            overflow: 'auto'
          }}
          id="list"
        >
          <div
            style={{
              height: `${rowVirtualizer.totalSize}px`,
              width: '100%',
              position: 'relative'
            }}
          >
            <InfiniteScroll
              dataLength={data.length}
              next={fetchMoreData}
              hasMore={hasMore}
              loader={<h4>Loading...</h4>}
              scrollableTarget="list"
              scrollThreshold={1}
            >
              {rowVirtualizer.virtualItems.map((virtualRow) => {
                return (
                  <div
                    key={virtualRow.index}
                    ref={virtualRow.measureRef}
                    className={
                      virtualRow.index % 2 ? 'ListItemOdd' : 'ListItemEven'
                    }
                    style={{
                      position: 'absolute',
                      top: 0,
                      left: 0,
                      width: '100%',
                      // height: `${virtualRow.size}px`,
                      transform: `translateY(${virtualRow.start}px)`,
                      fontSize: 40
                    }}
                  >
                    Row {virtualRow.index}a bc deio jdeio jdoiewj odiwej ojoi
                  </div>
                );
              })}
            </InfiniteScroll>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Dynamic;
